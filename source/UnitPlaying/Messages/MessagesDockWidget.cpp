#include "MessagesDockWidget.h"
#include <QTabWidget>
#include <QTextEdit>

MessagesDockWidget::MessagesDockWidget(QWidget* parent, Qt::WindowFlags flags)
	: QDockWidget("Messages", parent, flags)
{
	// Each message control is placed within a tab control
	messagesTabWidget = new QTabWidget(this);
	setWidget(messagesTabWidget);

	// Add the first tab (page): the unit problem description
	unitDescription = new QTextEdit();
	QIcon unitDescriptionIcon(":/button_information.svg");
	messagesTabWidget->addTab(unitDescription, unitDescriptionIcon, tr("Description"));

	// Add the second tab: output generated by build and debug tools
	toolsOutput = new QTextEdit();
	QIcon toolsOutputIcon(":/button_code_editor.svg");
	messagesTabWidget->addTab(toolsOutput, toolsOutputIcon, tr("Tools output"));

	// ToDo: Add a third tab: for player's solution input/output
}

MessagesDockWidget::~MessagesDockWidget()
{
}

void MessagesDockWidget::setUnitDescription(const QString &description, bool makeActiveTab)
{
	unitDescription->setHtml(description);
	if ( makeActiveTab )
		messagesTabWidget->setCurrentWidget(unitDescription);
}
