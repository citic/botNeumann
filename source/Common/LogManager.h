#ifndef LOGMANAGER_H
#define LOGMANAGER_H

#include <QObject>
#include <QFile>
#include <QLoggingCategory>

/** Manages a log file to store events generated by players that will be used to data analysis

	The log manager also has functionality to upload logs to a central network server
**/
class LogManager : public QObject
{
	Q_OBJECT
	Q_DISABLE_COPY(LogManager)

  protected:
	/// The log file keeps open while the botNeumann instance is running
	static QFile logFile;

  public:
	/// Constructor
	explicit LogManager(QObject *parent = nullptr);
	/// Destructor
	virtual ~LogManager();
	/// Called each time qInfo(), qDebug(), qError(), qFatal(), qCritical() functions are invoked
	static void messageHandler(QtMsgType type, const QMessageLogContext& context, const QString& message);
	/// Get the log file name for this device
	static QString getLogFilename();
	/// Builds a new file name for this device
	/// This function is only called once on a device
	static QString buildLogFilename(bool saveInSettings);
};

#endif // LOGMANAGER_H
